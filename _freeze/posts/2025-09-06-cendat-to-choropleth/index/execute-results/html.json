{
  "hash": "790e3c9e1337fcffba6e8cf7c040037a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Choropleths from Census Data\"\ndescription: \"Starting to Plan for the Next Big Feature\"\ndate: 2025-09-06\nauthor:\n    - name: Lance Couzens\n      url: https://mostlyunoriginal.github.io  \ncategories: [Python, cendat, Census, API, choropleth maps]\ncitation: \n  url: https://mostlyunoriginal.github.io/posts/2025-09-06-cendat-to-choropleth/\nimage: logo.png \ndraft: false\nlightbox: true\n---\n\n# Population Estimates + Area Geometry = New Possibilities\n\nWell, not new to like *the world*, but new to `cendat`.\n\nEver since I really got into statistical graphics (by way of `ggplot2` in `R`, circa 2012 or so) I've been fascinated with maps. Not maps for navigation, but maps for relating statistics to the areas from which they were derived–i.e., choropleth maps, which tie statistics to physical geometry by way of color scales. In order to create these maps, you need a data frame with your area-level statistic and polygons (arrays of coordinate pairs) to describe the shapes of those areas. In R that might just be a data frame with a list column (here's an example from a [previous post](https://mostlyunoriginal.github.io/posts/2025-03-22-Choropleths-and-LIst-Retrieval-Fun/)), and in Python, most commonly, a geopandas GeoDataFrame. Now, with the alpha release\\[s\\] of `ver 0.7.0`, `cendat` can both fetch the geometries corresponding to statistical areas and output GeoDataFrames via the `to_gpd` method of the `CenDatResponse` class. I'm just starting to tinker–admittedly, I have historically always used `ggplot2` to make these–and this post will document the origin point of that process, one that should result in a new `to_choropleth` method in the days (weeks?) ahead.\n\n## Example: Median Household Income by Block Group for Counties in Northern Colorado\n\n`cendat` supports several geographies down to the census block group level, and we'll focus on that summary level (150) for this example. Since there are literally hundreds of thousands of block groups in the U.S., they're mainly useful for *visual* analysis at local levels. In this example, we'll inspect the income distribution by block group across Larimer, Weld, and Boulder Counties in Northern Colorado. We'll use the 2023 ACS 5-year program for our estimates. We can specify our focus areas in the `within` parameter of the `get_data` method, as shown below.\n\n::: {#7022f32d .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport os\nfrom cendat import CenDatHelper\nimport contextily as ctx\n\ncdh = CenDatHelper(key=os.getenv(\"CENSUS_API_KEY\"))\n\ncdh.list_products(years=[2023], patterns=r\"acs/acs5\\)\")\ncdh.set_products()\ncdh.list_groups(patterns=r\"^median household income\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✅ API key loaded successfully.\n✅ Product set: 'ACS 5-Year Detailed Tables (2023/acs/acs5)' (Vintage: [2023])\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n[{'name': 'B29004',\n  'description': 'Median Household Income for Households With a Citizen, Voting-Age Householder (in 2023 Inflation-Adjusted Dollars)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013H',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (White Alone, Not Hispanic or Latino Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013I',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (Hispanic or Latino Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013B',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (Black or African American Alone Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013C',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (American Indian and Alaska Native Alone Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013A',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (White Alone Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013F',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (Some Other Race Alone Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013G',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (Two or More Races Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013D',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (Asian Alone Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013E',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) (Native Hawaiian and Other Pacific Islander Alone Householder)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B25119',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) by Tenure',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19019',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) by Household Size',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19013',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars)',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B22008',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) by Receipt of Food Stamps/SNAP in the Past 12 Months',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'},\n {'name': 'B19049',\n  'description': 'Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars) by Age of Householder',\n  'product': 'ACS 5-Year Detailed Tables (2023/acs/acs5)',\n  'vintage': [2023],\n  'url': 'http://api.census.gov/data/2023/acs/acs5'}]\n```\n:::\n:::\n\n\nWe can see here that `B19013` is the group we're interested in, so we'll set it and our geo level of interest (block groups: sumlev 150) and make our data request.\n\n::: {#121dc2c6 .cell execution_count=2}\n``` {.python .cell-code}\ncdh.set_groups([\"B19013\"])\ncdh.describe_groups()\ncdh.set_geos([\"150\"])\nresponse = cdh.get_data(\n    include_names=True,\n    include_geometry=True,\n    within={\n        \"state\": [\n            \"08\",\n        ],\n        \"county\": [\"069\", \"123\", \"013\"],\n    },\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✅ Groups set: B19013\n\n--- Group: B19013 (Median Household Income in the Past 12 Months (in 2023 Inflation-Adjusted Dollars)) ---\n\n  Product: ACS 5-Year Detailed Tables (2023/acs/acs5) (Vintage: 2023)\n      B19013_001E: Median household income in the past 12 months (in 2023 inflation-adjusted dollars)\n✅ Geographies set: 'block group' (requires `within` for: county, state, tract)\n✅ Variables set:\n  - Product: ACS 5-Year Detailed Tables (2023/acs/acs5) (Vintage: [2023])\n    Variables: B19013_001E\n✅ Parameters created for 1 geo-variable/group combinations.\n✅ Successfully fetched map servers.\n✅ Successfully fetched map server layers.\n✅ Found 1 combinations. Building API queries...\nℹ️ Discovering parent geographies for: ['tract']\n✅ Found 83 combinations. Building API queries...\nℹ️ Discovering parent geographies for: ['tract']\n✅ Found 78 combinations. Building API queries...\nℹ️ Making 162 API call(s)...\nℹ️ Pre-querying for geometry counts to determine pagination...\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 243 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('069')...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 7 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 6 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('123') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 6 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 5 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 1 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 4 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 2 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\n  - Found 3 geometries for WHERE 'STATE IN ('08') AND COUNTY IN ('013') AND TRACT IN...'. Building paginated tasks.\nℹ️ Fetching geometries across 162 paginated calls...\n✅ Data fetching complete. Stacking results.\n✅ Geometry fetching complete. Stacking results.\n```\n:::\n:::\n\n\nBecause we're requesting geometry, we're querying at the tract level, and this output is making me think I should have a `verbose` parameter that defaults to `False`...\n\nNow we can apply the new `to_gpd` method to the response object to join the data and geometries into a single GeoDataFrame. At this point we also want to set special missings to `None` so they don't pollute the color scale. I think this will need to be an optional dictionary parameter in the `to_choropleth` method.\n\n::: {#06ae856d .cell execution_count=3}\n``` {.python .cell-code}\ngdf = response.to_gpd(destring=True)\ngdf.loc[gdf[\"B19013_001E\"] == -666666666, \"B19013_001E\"] = None\n```\n:::\n\n\nNext we need to do a bit of manipulation to allow for harmony between area map base layers we might want to apply and our coordinates. This would be handled under the hood of the new method.\n\n::: {#d0e72c5c .cell execution_count=4}\n``` {.python .cell-code}\ngdf = gdf.set_crs(epsg=4326)\ngdf = gdf.to_crs(epsg=3857)\n```\n:::\n\n\nAnd now we can create the plot. This is pretty basic, as I'm still digging into all the possibilities and customizations that I might want to use as a baseline template. One thing to note, though--since we know that not all block groups will have nonmissing values for our estimates, we'll want to handle that in some graceful way. For now, I think subtle crosshatching works well.\n\nStraight choropleths are useful in and of themselves, but it can also be useful to have some places denoted. One way to do that would be to, say, directly label places above a certain size by their centroids. Another is to apply a base map. Not sure where I'll land with that option, but for this example I'm going with the latter.\n\n::: {#8b3532ee .cell execution_count=5}\n``` {.python .cell-code}\nfig, ax = plt.subplots(1, 1, figsize=(7, 5), dpi=300)\n\ngdf.plot(\n    column=\"B19013_001E\",\n    cmap=\"viridis\",\n    linewidth=0.05,\n    edgecolor=\"k\",\n    ax=ax,\n    legend=True,\n    alpha=0.7,\n    legend_kwds={\n        \"label\": \"Income\",\n        \"orientation\": \"horizontal\",\n        \"location\": \"bottom\",\n        \"shrink\": 0.75,\n        \"fraction\": 0.1,\n        \"format\": \"{x:,.0f}\",\n    },\n    missing_kwds={\n        \"color\": \"lightgrey\",\n        \"edgecolor\": \"grey\",\n        \"hatch\": \"////\",\n        \"label\": \"Missing values\",\n    },\n)\n\nctx.add_basemap(\n    ax, source=ctx.providers.CartoDB.PositronNoLabels, attribution=False, zoom=10\n)\nctx.add_basemap(\n    ax, source=ctx.providers.CartoDB.PositronOnlyLabels, attribution=False, zoom=9\n)\n\nax.set_title(\n    \"Larimer, Weld, and Boulder County - Med. HH Income by block group\",\n    fontdict={\"fontsize\": \"10\", \"fontweight\": \"1\"},\n)\nax.set_axis_off()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){}\n:::\n:::\n\n\nThis isn't perfect, but I think it's promising. Still lots to work out, but that's the fun part, right?\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}